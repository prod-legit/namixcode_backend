"""users

Revision ID: 9c96c5c7114e
Revises: 61959d644175
Create Date: 2024-11-16 00:32:27.433252

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "9c96c5c7114e"
down_revision: Union[str, None] = "61959d644175"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(as_uuid=False), nullable=False),

        sa.Column("email", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("phone", sa.String(), nullable=False),
        sa.Column("sex", sa.String(), nullable=False),
        sa.Column("birthdate", sa.Date(), nullable=False),
        sa.Column("experience", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("id", name=op.f("uq_users_id"))
    )
    op.create_table(
        "applies",
        sa.Column("org_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("user_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("date", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["org_id"],
            ["orgs.id"],
            name=op.f("fk_applies_org_id_orgs"),
            ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_applies_user_id_users"),
            ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("org_id", "user_id", name=op.f("pk_applies"))
    )
    op.create_table(
        "user_interests",
        sa.Column("id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("apply_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("interest", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["apply_id"],
            ["users.id"],
            name=op.f("fk_user_interests_apply_id_users"),
            ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_interests")),
        sa.UniqueConstraint("id", name=op.f("uq_user_interests_id"))
    )
    op.create_table(
        "user_professions",
        sa.Column("id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("apply_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("profession", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["apply_id"],
            ["users.id"],
            name=op.f("fk_user_professions_apply_id_users"),
            ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_professions")),
        sa.UniqueConstraint("id", name=op.f("uq_user_professions_id"))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_professions")
    op.drop_table("user_interests")
    op.drop_table("applies")
    op.drop_table("users")
    # ### end Alembic commands ###
